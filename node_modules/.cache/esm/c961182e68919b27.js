let buildingCtrl,sectorCtrl,userCtrl,fileCtrl,locationCtrl,trafficCtrl;_689‍.x([["default",()=>_689‍.o]]);_689‍.w("./building.ctrl",[["*",null,function(v){buildingCtrl=v}]]);_689‍.w("./sector.ctrl",[["*",null,function(v){sectorCtrl=v}]]);_689‍.w("./user.ctrl",[["*",null,function(v){userCtrl=v}]]);_689‍.w("./file.ctrl",[["*",null,function(v){fileCtrl=v}]]);_689‍.w("./location.ctrl",[["*",null,function(v){locationCtrl=v}]]);_689‍.w("./traffic.ctrl",[["*",null,function(v){trafficCtrl=v}]]);






// Graphql Resolver
const resolvers = {
	Query: {
		// Query about building
		buildings: buildingCtrl.buildings,
		building: buildingCtrl.building,

		// Query about sector
		sectors: sectorCtrl.sectors,

		// Query about user
		login: userCtrl.login,
		check: userCtrl.check,

		// Query about location
		locations: locationCtrl.locations,

		// Query about traffics
		traffics: trafficCtrl.traffics,
	},
	Mutation: {
		// Mutation about building
		addBuilding: buildingCtrl.addBuilding,
		modifyBuilding: buildingCtrl.modifyBuilding,
		deleteBuilding: buildingCtrl.deleteBuilding,

		// Mutation about sector
		addSector: sectorCtrl.addSector,
		deleteSector: sectorCtrl.deleteSector,

		// Mutation about user
		register: userCtrl.register,

		// Single File Upload
		singleFileUpload: fileCtrl.singleFileUpload,

		// Add Location
		addLocation: locationCtrl.addLocation,
		deleteLocation: locationCtrl.deleteLocation,

		// Add Traffic
		addTraffic: trafficCtrl.addTraffic,
	},
};

_689‍.d(resolvers);
