let gql,buildingTypeDefs,sectorTypeDefs,userTypeDefs,fileTypeDefs,locationTypeDefs,trafficTypeDefs;_a64‍.x([["default",()=>_a64‍.o]]);_a64‍.w("apollo-server",[["gql",["gql"],function(v){gql=v}]]);_a64‍.w("./building",[["default",["buildingTypeDefs"],function(v){buildingTypeDefs=v}]]);_a64‍.w("./sector",[["default",["sectorTypeDefs"],function(v){sectorTypeDefs=v}]]);_a64‍.w("./user",[["default",["userTypeDefs"],function(v){userTypeDefs=v}]]);_a64‍.w("./file",[["default",["fileTypeDefs"],function(v){fileTypeDefs=v}]]);_a64‍.w("./location",[["default",["locationTypeDefs"],function(v){locationTypeDefs=v}]]);_a64‍.w("./traffic",[["default",["trafficTypeDefs"],function(v){trafficTypeDefs=v}]]);







const typeDefs = gql`
	${sectorTypeDefs}
	${buildingTypeDefs}
	${userTypeDefs}
	${fileTypeDefs}
	${locationTypeDefs}
	${trafficTypeDefs}

	type Query {
		# Query about building
		buildings: [Building]
		building(id: ID!): Building

		# Query about sector
		sectors(type: String, parent: String): [Sector]

		# Query about authentication
		login(userInput: userInput!): Check

		# check if user logged in
		check: Check

		# List Location Informations
		locations: [Location]

		# List Traffic with buildingId
		traffics(buildingId: ID): [Traffic]
	}

	type Mutation {
		# Mutation about building
		addBuilding(buildingInput: buildingInput): Building
		modifyBuilding(id: ID!, buildingInput: buildingInput): Building
		deleteBuilding(ids: [ID!]): [Building]

		# Mutation about sector
		addSector(type: String, parent: String, name: String): Sector # didn't use sectorInput input
		deleteSector(sectorInput: [sectorInput]): [Sector]
		# Because sector is just a data containing one word, there's no meaning at modifing sector data

		# Mutation about authentication
		register(userInput: userInput): Check

		# File upload
		singleFileUpload(file: Upload!): File

		# Add Location Information
		addLocation(locationInput: locationInput): Location
		deleteLocation(name: String!): Location

		# Add traffic data with buildingId
		addTraffic(buildingId: ID!, percentage: Int!): Traffic
	}
`;

_a64‍.d(typeDefs);
